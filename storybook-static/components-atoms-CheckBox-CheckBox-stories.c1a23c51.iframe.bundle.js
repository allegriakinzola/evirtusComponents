/*! For license information please see components-atoms-CheckBox-CheckBox-stories.c1a23c51.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_allegriakinzola_evirtus=self.webpackChunk_allegriakinzola_evirtus||[]).push([[563],{"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./src/components/atoms/CheckBox/CheckBox.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>CheckBox_stories});__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/main.css");var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Checkbox=({name,label,value,onChange,checked,fullWidth,required,disabled,labelProps,inputProps,id,size,error,className})=>{const{labelClassName,...otherLabelProps}=labelProps,width=fullWidth?"w-full":"w-fit",textColor=error?"danger":"gray5",{inputClassName,...otherInputProps}=inputProps;return(0,jsx_runtime.jsxs)("div",{className:`flex items-center ${width} ${className}`,children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",name,onChange,value,checked,id:id||"input-radio",required,disabled,className:`${inputClassName} peer w-3 h-3 text-${textColor} bg-gray1 text-${size}`,...otherInputProps}),(0,jsx_runtime.jsx)("label",{htmlFor:id||"input-radio",className:`pl-2 text-${textColor} cursor-pointer text-${size} peer-disabled:text-gray2 ${labelClassName}`,...otherLabelProps,children:label})]})};Checkbox.displayName="Checkbox",Checkbox.propTypes={size:prop_types_default().oneOf(["small","medium","large"]),name:prop_types_default().string,label:prop_types_default().string,value:prop_types_default().any,onChange:prop_types_default().func,checked:prop_types_default().bool,disabled:prop_types_default().bool,required:prop_types_default().bool,fullWidth:prop_types_default().bool,inputProps:prop_types_default().object,labelProps:prop_types_default().object,error:prop_types_default().bool,className:prop_types_default().string},Checkbox.defaultProps={name:"",label:"",labelProps:{},inputProps:{},error:!1,size:"medium",checked:!1,disabled:!1,required:!1,fullWidth:!1,className:"",onChange:()=>{}},Checkbox.__docgenInfo={description:"The checkBox component, uses an input type checkbox and a label html element",methods:[],displayName:"Checkbox",props:{name:{defaultValue:{value:'""',computed:!1},description:"The name of the input",type:{name:"string"},required:!1},label:{defaultValue:{value:'""',computed:!1},description:"The label of the input",type:{name:"string"},required:!1},labelProps:{defaultValue:{value:"{}",computed:!1},description:"The object containing other label props",type:{name:"object"},required:!1},inputProps:{defaultValue:{value:"{}",computed:!1},description:"The object containing other input props",type:{name:"object"},required:!1},error:{defaultValue:{value:"false",computed:!1},description:"The error state",type:{name:"bool"},required:!1},size:{defaultValue:{value:"'medium'",computed:!1},description:"The size of the component.",type:{name:"enum",value:[{value:'"small"',computed:!1},{value:'"medium"',computed:!1},{value:'"large"',computed:!1}]},required:!1},checked:{defaultValue:{value:"false",computed:!1},description:"The state of the radio button",type:{name:"bool"},required:!1},disabled:{defaultValue:{value:"false",computed:!1},description:"The disabled state of the input",type:{name:"bool"},required:!1},required:{defaultValue:{value:"false",computed:!1},description:"The required state of the input",type:{name:"bool"},required:!1},fullWidth:{defaultValue:{value:"false",computed:!1},description:"The state of the component width",type:{name:"bool"},required:!1},className:{defaultValue:{value:'""',computed:!1},description:"The class name of the container div",type:{name:"string"},required:!1},onChange:{defaultValue:{value:"() => { }",computed:!1},description:"The function to be called when the input value changes",type:{name:"func"},required:!1},value:{description:"The value of the input element",type:{name:"any"},required:!1}}};const CheckBox=Checkbox,CheckBox_stories={title:"COMPONENTS/atoms/Checkbox",component:CheckBox},Template=args=>(0,jsx_runtime.jsx)(CheckBox,{...args});Template.displayName="Template";const Default=Template.bind({});Default.args={label:"Some label"};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Checkbox {...args} />",...Default.parameters?.docs?.source}}}}}]);